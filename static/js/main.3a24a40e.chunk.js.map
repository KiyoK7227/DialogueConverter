{"version":3,"sources":["index.js"],"names":["EssayForm","props","_this","Object","C_Users_Kouhei_Kiyohara_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Kouhei_Kiyohara_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Kouhei_Kiyohara_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","value","handleChange","bind","C_Users_Kouhei_Kiyohara_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleSubmit","event","setState","target","_this2","inputText","split","textArray","i","length","splitText","unshift","replace","push","join","navigator","clipboard","writeText","then","success","sendResult","error","preventDefault","result","popup","document","getElementById","classList","add","blackBg","closeBtn","closePopUp","window","alert","elem","addEventListener","remove","textArea","querySelector","rows","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","onSubmit","id","className","style","width","onChange","type","React","Component","Howto","_this3","htmlFor","SuccessPop","_this4","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.3a24a40e.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\n\nclass EssayForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    //文字列を改行ごとに分割して保管\n    let inputText = this.state.value.split(/\\r\\n|\\n/);\n    let textArray = [];\n    for (let i = 0; i < inputText.length; i++) {\n      if (inputText[i].length <= 0) continue;\n      //文字列を最初の１回目の「の手前で分割し、「を削除する\n      let splitText = inputText[i].split(/(?<=^[^「]+?)「/);\n      if (splitText.length <= 1) splitText.unshift(\"\");\n      //文字列から一番最後の」を削除する\n      splitText[1] = splitText[1].replace(/(.*)」/, \"$1\");\n      //配列にpush\n      textArray.push(splitText[0] + \"\t\" + splitText[1]);\n    }\n    //結合\n    textArray = textArray.join(\"\\n\");\n    navigator.clipboard.writeText(textArray)\n      .then(\n        success => this.sendResult(true),\n        error => this.sendResult(false)\n      );\n    event.preventDefault();\n  }\n\n  sendResult(result) {\n    if (!result) {\n      window.alert(\"申し訳ありません。クリップボードへのコピーに失敗しました。\\nお手数ですが別のブラウザなどをお試しください。\");\n      return;\n    }\n    var popup = document.getElementById(\"js-popup\");\n    if (!popup) return;\n    popup.classList.add(\"is-show\");\n\n    var blackBg = document.getElementById(\"js-black-bg\");\n    var closeBtn = document.getElementById(\"js-close-btn\");\n\n    closePopUp(blackBg);\n    closePopUp(closeBtn);\n\n    function closePopUp(elem) {\n      if (!elem) return;\n      elem.addEventListener(\"click\", function () {\n        popup.classList.remove(\"is-show\");\n      })\n    }\n  }\n\n  render() {\n    const textArea = document.querySelector(\"textarea\");\n    const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n    const rows = textRowCount + 1;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <div id=\"formAlign\">\n            <textarea className=\"textArea\"\n              style={{ width: \"50%\" }}\n              rows={rows}\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <input type=\"submit\" value=\"変換してクリップボードへコピー\" className=\"button\" />\n        </form>\n      </>\n    );\n  }\n}\n\nclass Howto extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"popup_wrap\">\n          <input id=\"trigger\" type=\"checkbox\" />\n          <div className=\"popup_overlay\">\n            <label htmlFor=\"trigger\" className=\"popup_trigger\"></label>\n            <div className=\"popup_content\">\n              <label htmlFor=\"trigger\" className=\"close_btn\">×</label>\n              <h1 className=\"popup-logo\">\n                これはどんなアプリ？\n              </h1>\n              <p>\n                キャラクターのセリフを \"名前\" と \"セリフ\" でセル単位ごとに分割してクリップボードに<br />コピーできるWebアプリです。\n              </p>\n              <h1 className=\"popup-logo\">\n                どういうこと？\n              </h1>\n              <p>\n                例えば……<br />田中「俺の好きな名台詞は「お前はもう……死んでいるッ！！」だね～」　というセリフを<br />田中 / 俺の好きな名台詞は「お前はもう……死んでいるッ！！」だね～　という二つのセルに分けます。<br /><br />\n                つまり、シナリオライターが書いたドキュメント文章を名前とセリフに分割してゲーム開発などで<br />コピペ作業がしやすくなります！\n              </p>\n              <h1 className=\"popup-logo\">\n                使い方\n              </h1>\n              <p>\n                テキストフォームに変換したい文章を貼り付けて、「変換してクリップボードへコピー」というボタンを<br />押すとクリップボードに分割した文章データをコピーできます。<br />\n                あとは、Excelやスプレッドシートへ Ctrl + V で貼り付けてみてください。\n              </p>\n              <h1 className=\"popup-logo\">\n                １行づつしかできないの？セリフ形式になってない地の文は？\n              </h1>\n              <p>\n                何行でも貼り付けられますよ。<br />文章にセリフになってない地の文が混じっていても大丈夫です。\n              </p>\n            </div>\n          </div>\n        </div><label htmlFor=\"trigger\" className=\"open_btn\">使い方</label>\n      </>\n    );\n  }\n}\n\nclass SuccessPop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"popup\" id=\"js-popup\">\n          <div className=\"popup-inner\">\n            <div className=\"close-btn2\" id=\"js-close-btn\"><label htmlFor=\"js-close-btn\" className=\"close_btn\">×</label></div>\n            <h1 className=\"popup-logo\">\n              成功！\n            </h1>\n            <p>\n              変換してクリップボードへコピーしました。<br />Excelやスプレッドシートへ貼り付けてご利用ください。<br /><br />※貼り付ける際はセルをシングルクリックした状態にしてください。\n            </p>\n          </div>\n          <div className=\"black-background\" id=\"js-black-bg\"></div>\n        </div>\n      </>\n    );\n  }\n}\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<EssayForm />);\nconst root2 = ReactDOM.createRoot(document.getElementById(\"root2\"));\nroot2.render(<Howto />);\nconst root3 = ReactDOM.createRoot(document.getElementById(\"root3\"));\nroot3.render(<SuccessPop />);\n"],"sourceRoot":""}